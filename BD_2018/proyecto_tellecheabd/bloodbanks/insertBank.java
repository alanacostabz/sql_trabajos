/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloodbanks;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Adrian
 */
public class insertBank extends javax.swing.JFrame {

    /**
     * Creates new form insertBank
     */
    public static final int RET_CANCEL = 0;
    private final Database db;
    int entrar = 0;

    public insertBank(java.awt.Frame parent, Database db) {

        initComponents();
        this.db = db;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBanco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDetalles = new javax.swing.JTextArea();
        btnDireccion = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtDir = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registrar banco"));

        jLabel1.setText("Nombre:");

        jLabel2.setText("Detalles:");

        txtDetalles.setColumns(20);
        txtDetalles.setLineWrap(true);
        txtDetalles.setRows(5);
        jScrollPane1.setViewportView(txtDetalles);

        btnDireccion.setText("Agregar direccion");
        btnDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDireccionActionPerformed(evt);
            }
        });

        jButton1.setText("Registrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDireccion)
                .addGap(114, 114, 114))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBanco)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDireccion)
                .addGap(22, 22, 22)
                .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDireccionActionPerformed
        // TODO add your handling code here:
        entrar = 1;
        insertAddress modelo = new insertAddress(this, db);
        modelo.setVisible(true);
        
        

    }//GEN-LAST:event_btnDireccionActionPerformed
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nombreBanco = txtBanco.getText();
        String detalles = txtDetalles.getText();

        if (nombreBanco.equals("") || nombreBanco.equals(" ")) {
            JOptionPane.showMessageDialog(rootPane, "El campo nombre esta vacio");

        } else if (entrar == 0) {
            JOptionPane.showMessageDialog(rootPane, "Es necesario agregar una direccion al banco");
            

        } else {
            try {
                if (validacionDatos(nombreBanco) > 0) {
                    JOptionPane.showMessageDialog(this, "El banco " + nombreBanco.toUpperCase() + " ya se encuentra en la base de datos.");
                    txtBanco.setText("");
                    txtDetalles.setText("");
                } else {
                    int input = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de agregar el banco " + nombreBanco.toUpperCase() + "?", "Agregar banco", 0);
                    if (input == 0) {
                        StringBuilder sql
                                = new StringBuilder("INSERT INTO public.bloodbank (bloodbank_details, address_id, bloodbank_name) VALUES (\'");
                        sql.append(detalles);
                        sql.append("\','");
                        sql.append(obtenerID());
                        sql.append("\','");
                        sql.append(nombreBanco.toUpperCase());
                        sql.append("\');");
                        System.out.println(sql.toString());
                        db.update(sql.toString());

                        JOptionPane.showMessageDialog(this, "El banco " + nombreBanco.toUpperCase() + " se ha agregado correctamente.");
                        // doClose(returnStatus);
                        txtBanco.setText("");

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(insertCategory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    public int validacionDatos(String vd) throws SQLException {
        StringBuilder sql1 = new StringBuilder("");
        int x = 0;
        try {
            ResultSet rs = db.query(sql1.toString());
            while (rs.next()) {

                String name = rs.getString(1);
                if (name.equalsIgnoreCase(vd)) {
                    x++;
                }

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return x;
    }

    public String obtenerDireccion() {
        String dir = "";
        try {

            final String sql = String.format("select * from public.address order by address_id desc limit 1");

            ResultSet rs = db.query(sql);
            int id = 0;
            int buildingN = 0;
            int streetN = 0;
            String cityN = "";
            String cp = "";
            String estado = "";
            String pais = "";

            while (rs.next()) {
                id = rs.getInt(1);
                buildingN = rs.getInt(2);
                streetN = rs.getInt(3);
                cityN = rs.getString(4);
                cp = rs.getString(5);
                estado = rs.getString(6);
                pais = rs.getString(7);

            }

            dir = "" + streetN + " #" + buildingN + " CP: " + cp + "," + cityN + "," + estado + "," + pais;
        } catch (SQLException ex) {
            Logger.getLogger(insertAddress.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dir;
    }
    
    public int obtenerID(){
        int id = 0;
        try {

            final String sql = String.format("select * from public.address order by address_id desc limit 1");

            ResultSet rs = db.query(sql);
           
           
            while (rs.next()) {
                id = rs.getInt(1);
             }

           
        } catch (SQLException ex) {
            Logger.getLogger(insertAddress.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    }
    
 
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDireccion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBanco;
    private javax.swing.JTextArea txtDetalles;
    private javax.swing.JTextField txtDir;
    // End of variables declaration//GEN-END:variables
}
