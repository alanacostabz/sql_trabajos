/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WineStoreDB;

import static WineStoreDB.InsertRefRegion.RET_CANCEL;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Maestro
 */
public class InsertRefVineyards extends javax.swing.JDialog {

    /**
     * Creates new form InsertCoffeesDialog
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;
    private final Database db;
    private final HashMap ht1;
    private final HashMap pais;
    private final HashMap region;

    public InsertRefVineyards(java.awt.Frame parent, Database db) {
        super(parent, true);
        initComponents();
        ht1 = new HashMap<String, Integer>();
        this.db = db;
        pais = new HashMap<String, Integer>();
        region = new HashMap<String, Integer>();
        buldComboCountry();
        buldComboRegion();
        comboRegion.removeAllItems();
        comboRegion.addItem("Seleccionar");
        // Construir el combo con el ID y Nombre de proveedor
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboRegion = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboCountry = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insertar Viñedo");
        setPreferredSize(new java.awt.Dimension(600, 179));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre del viñedo:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        txtNombre.setColumns(42);
        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 249, -1));

        okButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        okButton.setText("Agregar");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        getContentPane().add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nombre:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 45, -1, 0));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Agregar nuevo Viñedo");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nombre de la región:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, -1, -1));

        comboRegion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        getContentPane().add(comboRegion, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 150, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("País:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        comboCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        comboCountry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                comboCountryFocusLost(evt);
            }
        });
        getContentPane().add(comboCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 170, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String nombre = txtNombre.getText();

        String text = txtNombre.getText().trim();
        String p = comboCountry.getSelectedItem().toString();
        String c = comboRegion.getSelectedItem().toString();
        Integer id = (Integer) region.get(comboRegion.getSelectedItem());
       

        if (text.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo vacío, ingrese un nuevo viñedo.");
        } else if (p.equals("Seleccionar")) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione el país de la región del vino.");
        } else if (c.equals("Seleccionar")) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione una región para el viñedo región.");
        } else {
            try {
                if (validacionDatos(text) > 0) {
                    JOptionPane.showMessageDialog(this, "El viñedo " + text.toUpperCase() + " ya se encuentra en la base de datos.");
                } else {
                    int input = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de agregar el viñedo " + text.toUpperCase() + " en la región de " + c + "?", "Agregar viñedo", 0);
                    System.out.println(input);
                    if (input == 0) {
                        StringBuilder sql
                                = new StringBuilder("INSERT INTO winestore.ref_vineyards (vineyard_name, region_code) VALUES (\'");
                        sql.append(text.toUpperCase());
                        sql.append("', '");
                        sql.append(id.intValue());
                        sql.append("\');");
                        System.out.println(sql.toString());
                        db.update(sql.toString());
                     
                        JOptionPane.showMessageDialog(this, "El viñedo " + text + " ha sido añadido exitosamente.");
                        txtNombre.setText("");
                        //doClose(returnStatus);
                    }
                }

            } catch (SQLException ex) {
                Logger.getLogger(InsertRefVineyards.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_okButtonActionPerformed

    public int validacionDatos(String vd) throws SQLException {
        StringBuilder sql1 = new StringBuilder("select vineyard_name from winestore.ref_vineyards");
        int x = 0;
        try {
            ResultSet rs = db.query(sql1.toString());
            while (rs.next()) {

                String name = rs.getString(1);
                if (name.equalsIgnoreCase(vd)) {
                    x++;
                }

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return x;
    }

    private void closeDialog(java.awt.event.WindowEvent evt) {
        doClose(RET_CANCEL);
    }
    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost

    }//GEN-LAST:event_txtNombreFocusLost

    private int returnStatus = RET_CANCEL;

    public int getReturnStatus() {
        return returnStatus;
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
        if (txtNombre.getText().length() == 30) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_formKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se pueden ingresar letras.");
        }

        if (txtNombre.getText().length() == 30) {
            evt.consume();
            getToolkit().beep();
        }

    }//GEN-LAST:event_txtNombreKeyTyped

    private void comboCountryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboCountryFocusLost
        // TODO add your handling code here:
        if (comboCountry.getSelectedItem().toString().equals("Seleccionar")) {
            comboRegion.removeAllItems();
            region.clear();

            String selet = "Seleccionar";
            comboRegion.addItem(selet);

        } else {

            Integer Pais = (Integer) pais.get(comboCountry.getSelectedItem());
            final String sql = String.format("SELECT region_code,region_name FROM winestore.ref_regions where country_code = %s order by region_name", Pais.intValue());
            System.out.println(sql.toString());
            try {
                comboRegion.removeAllItems();
                region.clear();
                ResultSet rs = db.query(sql);
                String selet = "Seleccionar";
                comboRegion.addItem(selet);
                while (rs.next()) {
                    //comboRegion.addItem("NULL");
                    int id = rs.getInt(1);
                    String name = rs.getString(2);
                    comboRegion.addItem(name);
                    region.put(name, id);
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

        }
    }//GEN-LAST:event_comboCountryFocusLost

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    private void buldComboRegion() {
        final String sql1 = "select  region_code, winestore.ref_regions.country_code from winestore.ref_regions inner join winestore.ref_countries on \n"
                + "winestore.ref_regions.country_code = winestore.ref_countries.country_code order by winestore.ref_countries.country_name";
        int ide = 0;
        int aux = 0;
        try {

            ResultSet rs = db.query(sql1);
            int contador = 0;

            while (rs.next()) {
                ide = rs.getInt(2);
                contador++;
                if (contador == 1) {
                    aux = ide;
                }

            }

            //System.out.println(aux);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        final String sql = "SELECT region_code,region_name FROM winestore.ref_regions where country_code = " + aux + " order by region_name";

        try {

            ResultSet rs = db.query(sql);

            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboRegion.addItem(name);
                region.put(name, id);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buldComboCountry() {
        final String sql = "SELECT country_code,country_name FROM winestore.ref_countries order by country_name";

        try {
            ResultSet rs = db.query(sql);
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboCountry.addItem(name);
                pais.put(name, id);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> comboCountry;
    private javax.swing.JComboBox<String> comboRegion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
